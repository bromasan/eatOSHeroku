{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/banner/banner.component.ts","./src/app/components/banner/banner.component.html","./src/app/components/contest-begin/contest-begin.component.ts","./src/app/components/contest-begin/contest-begin.component.html","./src/app/components/contest-finish/contest-finish.component.ts","./src/app/components/contest-finish/contest-finish.component.html","./src/app/components/contest-question/contest-question.component.ts","./src/app/components/contest-question/contest-question.component.html","./src/app/components/contest-signin-screen/contest-signin-screen.component.ts","./src/app/components/contest-signin-screen/contest-signin-screen.component.html","./src/app/components/contest-signin/contest-signin.component.ts","./src/app/components/contest-signin/contest-signin.component.html","./src/app/components/contest-timer/contest-timer.component.ts","./src/app/components/contest-timer/contest-timer.component.html","./src/app/components/dialog-body/dialog-body.component.ts","./src/app/components/dialog-body/dialog-body.component.html","./src/app/service/api.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ContestBeginComponent } from './components/contest-begin/contest-begin.component';\nimport { ContestQuestionComponent } from './components/contest-question/contest-question.component';\nimport { ContestSigninComponent } from './components/contest-signin/contest-signin.component';\nimport { ContestSigninScreenComponent } from './components/contest-signin-screen/contest-signin-screen.component';\nimport { ContestFinishComponent } from './components/contest-finish/contest-finish.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: '/home' },\n  { path: 'home', component: ContestSigninScreenComponent },\n  { path: 'contest-signin', component: ContestSigninComponent },\n  { path: 'contest-question/:id', component: ContestQuestionComponent },\n  { path: 'contest-begin', component: ContestBeginComponent },\n  { path: 'contest-finish', component: ContestFinishComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'contest-app';\n}\n","<app-banner></app-banner>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ContestSigninComponent } from './components/contest-signin/contest-signin.component';\nimport { ContestQuestionComponent } from './components/contest-question/contest-question.component';\nimport { ContestBeginComponent } from './components/contest-begin/contest-begin.component';\nimport { ContestTimerComponent } from './components/contest-timer/contest-timer.component';\nimport { ContestSigninScreenComponent } from './components/contest-signin-screen/contest-signin-screen.component';\nimport  {DialogBodyComponent} from './components/dialog-body/dialog-body.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ContestFinishComponent } from './components/contest-finish/contest-finish.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BannerComponent } from './components/banner/banner.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContestSigninComponent,\n    ContestQuestionComponent,\n    ContestBeginComponent,\n    ContestTimerComponent,\n    ContestSigninScreenComponent,\n    ContestFinishComponent,\n    DialogBodyComponent,\n    BannerComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatDialogModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [DialogBodyComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.css']\n})\nexport class BannerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-dark\" style=\"background: linear-gradient(54deg, rgba(255,78,199,0.9262079831932774) 0%, rgba(255,78,199,0.25674019607843135) 100%); justify-content: center;\">\n  <h1>Brock Guzman + eatOS</h1>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contest-begin',\n  templateUrl: './contest-begin.component.html',\n  styleUrls: ['./contest-begin.component.css']\n})\nexport class ContestBeginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n\n}\n","\n<div class=\"container justify-content-center mr-auto ml-auto mt-5\" style=\"width: 75%;\">\n    <!-- form card register -->\n    <div class=\"card-body \">\n      <div class=\"container\">\n        <div class=\"row justify-content-center\">\n          <a class=\"btn btn-success\" routerLink=\"/contest-question/0\" role=\"button\" style=\"background-color: rgba(255,78,199,0.65); font-family: 'Montserrat', sans-serif; border: none; color: #FFF;\">Let's Begin</a>\n        </div>\n      </div>\n\n    </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef } from \"@angular/material/dialog\";\nimport {\n  MAT_DIALOG_DATA\n} from \"@angular/material/dialog\";\n\n\n@Component({\n  selector: 'app-contest-finish',\n  templateUrl: './contest-finish.component.html',\n  styleUrls: ['./contest-finish.component.css']\n})\nexport class ContestFinishComponent implements OnInit {\n  score:number;\n  constructor(\n      public dialogRef: MatDialogRef<ContestFinishComponent>,\n      @Inject(MAT_DIALOG_DATA) public data: any\n    ){}\n\n    ngOnInit(): void {\n    }\n\n\n    close() {\n      this.dialogRef.close();\n    }\n\n\n\n\n\n}\n","<h4 style=\"font-family: 'Montserrat', sans-serif;\">Congratulations! Check out how many points you got!</h4>\n\n<mat-dialog-content class=\"dialog\" style=\"font-family: 'Montserrat', sans-serif; font-size: xx-large;\">\n{{data.points}}/500 Points\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n    <button type=\"button\" class=\"btn btn-success\" mat-dialog-close style=\"background-color: rgba(255,78,199,0.65); font-family: 'Montserrat', sans-serif; border: none; color: #FFF;\">Try Again</button>\n</mat-dialog-actions>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from './../../service/api.service';\nimport {Router, ActivatedRoute, ParamMap} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {map, switchMap} from 'rxjs/operators';\nimport {MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { DialogBodyComponent } from '../dialog-body/dialog-body.component';\nimport { ContestFinishComponent } from '../contest-finish/contest-finish.component';\n\n@Component({\n  selector: 'app-contest-question',\n  templateUrl: './contest-question.component.html',\n  styleUrls: ['./contest-question.component.css']\n})\nexport class ContestQuestionComponent implements OnInit {\n  Question:any;\n  submitted = false;\n  User:any;\n  timeLeft:number = 15;\n  seconds;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private matDialog: MatDialog\n  ) {\n    console.log(\"CONSTRUCTORRR\")\n  }\n\n  ngOnInit() {\n    this.startTimer();\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) =>\n        this.apiService.getQuestion(params.get('id'))\n      )\n    ).subscribe(question => this.Question = question);\n    let user = this.apiService.getUser(this.apiService.getId());\n    user.subscribe(user => this.User = user);\n    console.log(\"INIT\");\n\n\n  }\n\n  setTimer() {\n    this.timeLeft = 15;\n  }\n\n  stopTimer() {\n    console.log(\"stopTimer\");\n    clearInterval(this.seconds);\n  }\n\n  startTimer() {\n    console.log(\"startTimer\");\n    this.seconds = setInterval(() => {\n      if(this.timeLeft > 0) {\n        this.timeLeft--;\n      } else {\n        this.stopTimer();\n        this.onClick(\"\");\n      }\n    }, 1000)\n  }\n\n  onClick(answer) {\n    this.stopTimer();\n    console.log(\"onCLick\");\n    this.submitted = true;\n\n    this.apiService.submit({answer: answer, question: this.Question.question._id, user: this.User._id, qid: this.Question.question.id}).subscribe(\n      (res) => {\n        this.openDialog(res);\n      }, (error) => {\n        console.log(error);\n      });\n    }\n\n  openDialog(res) {\n    console.log(\"openDialog\");\n    if (res.alert === \"fin\") {\n      this.apiService.getPoints(this.User._id).subscribe(\n        (resP) => {\n          console.log(\"RESP:\",resP);\n          let dialogRefEnd = this.matDialog.open(ContestFinishComponent, {\n                                                                              height : \"15em\",\n                                                                              width : \"30em\",\n                                                                              hasBackdrop : true,\n                                                                              autoFocus : false,\n                                                                              data : resP\n                                                                            });\n          dialogRefEnd.afterClosed().subscribe(results => {\n              this.router.navigate(['/home']);\n            }\n          );\n        }, (error) => {\n          console.log(error);\n        }\n      )\n\n    } else {\n\n      let dialogRefContinue = this.matDialog.open(DialogBodyComponent, {\n                                                                          height : \"10em\",\n                                                                          width : \"20em\",\n                                                                          hasBackdrop : true,\n                                                                          autoFocus : false,\n                                                                          data : {isCorrect: res.isCorrect}\n                                                                        });\n\n      dialogRefContinue.afterClosed().subscribe(results => {\n        this.setTimer();\n        this.startTimer();\n        this.router.navigate(['/contest-question/' + res.id]);\n        }\n      );\n    }\n\n\n\n  }\n\n\n\n\n\n}\n","\n<div class=\"container justify-content-center mr-auto ml-auto mt-5\" style=\"width: 75%;\">\n\n\n  <div class=\"card text-center justify-content-center p-4\" >\n    <!-- form card register -->\n    <div class=\"card-body \">\n\n      <h2 [ngClass]=\"{'timer1': timeLeft > 5, 'timer2': timeLeft <= 5} \">{{timeLeft}}</h2>\n      <p class=\"lead\" style=\"font-family: 'Montserrat', sans-serif;\">{{Question.question.text}}</p>\n      <div class=\"container\">\n        <div class=\"row justify-content-center\">\n          <div class=\"col-lg\">\n            <a class=\"btn btn-success btn-lg btn-block\"  style=\"background-color: rgba(255,78,199,0.65); font-family: 'Montserrat', sans-serif; border: none; color: #FFF;\" (click)=\"onClick(Question.answers[0].text)\">{{Question.answers[0].text}}</a>\n          </div>\n          <div class=\"col-lg\">\n            <a class=\"btn btn-success btn-lg btn-block\"  style=\"background-color: rgba(255,78,199,0.65); font-family: 'Montserrat', sans-serif; border: none; color: #FFF;\" (click)=\"onClick(Question.answers[1].text)\">{{Question.answers[1].text}}</a>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-lg\">\n            <br>\n          </div>\n\n          <div class=\"col-lg\">\n            <br>\n          </div>\n        </div>\n        <div class=\"row justify-content-center\">\n          <div class=\"col-lg\">\n            <a class=\"btn btn-success btn-lg btn-block\"  style=\"background-color: rgba(255,78,199,0.65); font-family: 'Montserrat', sans-serif; border: none; color: #FFF;\" (click)=\"onClick(Question.answers[2].text)\">{{Question.answers[2].text}}</a>\n          </div>\n          <div class=\"col-lg\">\n            <a class=\"btn btn-success btn-lg btn-block\"  style=\"background-color: rgba(255,78,199,0.65); font-family: 'Montserrat', sans-serif; border: none; color: #FFF;\" (click)=\"onClick(Question.answers[3].text)\">{{Question.answers[3].text}}</a>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contest-signin-screen',\n  templateUrl: './contest-signin-screen.component.html',\n  styleUrls: ['./contest-signin-screen.component.css']\n})\nexport class ContestSigninScreenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n\n}\n","<div class=\"container justify-content-center mr-auto ml-auto mt-5\" style=\"width: 75%;\">\n    <!-- form card register -->\n    <div class=\"card-body \">\n      <div class=\"container\">\n        <div class=\"row justify-content-center\">\n          <a class=\"btn btn-success\" routerLink=\"/contest-signin\" role=\"button\" style=\"background-color: rgba(255,78,199,0.65); font-family: 'Montserrat', sans-serif; border: none; color: #FFF;\">Sign Up</a>\n        </div>\n      </div>\n\n    </div>\n</div>\n","import { Router } from '@angular/router';\nimport { ApiService } from './../../service/api.service';\nimport { Component, OnInit, NgZone } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-contest-signin',\n  templateUrl: './contest-signin.component.html',\n  styleUrls: ['./contest-signin.component.css']\n})\nexport class ContestSigninComponent implements OnInit {\n  submitted = false;\n  userForm : FormGroup;\n\n\n  constructor(\n    public fb: FormBuilder,\n    private router: Router,\n    private ngZone: NgZone,\n    private apiService: ApiService\n  ) {\n    this.mainForm();\n  }\n\n  ngOnInit() { }\n\n  mainForm() {\n    this.userForm = this.fb.group({\n      email: ['', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')]]\n    })\n  }\n\n  get myForm(){\n    return this.userForm.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (!this.userForm.valid) {\n      return false;\n    } else {\n      this.apiService.signInUser(this.userForm.value).subscribe(\n        (res) => {\n          this.apiService.setId(res._id);\n\n          \n          this.ngZone.run(() => this.router.navigateByUrl('/contest-begin'))\n        }, (error) => {\n          console.log(error);\n        });\n    }\n  }\n\n}\n","<div class=\"row justify-content-center\">\n  <div class=\"col-md-4 register-employee\">\n    <!-- form card register -->\n    <div class=\"card-body\">\n      <form [formGroup]=\"userForm\" (ngSubmit)=\"onSubmit()\">\n\n        <div class=\"form-group\">\n          <input class=\"form-control\" type=\"text\" formControlName=\"email\" placeholder=\"Email\">\n          <!-- error -->\n          <div class=\"invalid-feedback\" *ngIf=\"submitted && myForm.email.errors?.required\">\n            Enter your email.\n          </div>\n          <div class=\"invalid-feedback\" *ngIf=\"submitted && myForm.email.errors?.pattern\">\n            Enter valid email.\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <button class=\"btn btn-success btn-lg btn-block\" type=\"submit\" style=\"background-color: rgba(255,78,199,0.65); font-family: 'Montserrat', sans-serif; border: none; \">Register</button>\n        </div>\n      </form>\n\n    </div>\n  </div><!-- form card register -->\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contest-timer',\n  templateUrl: './contest-timer.component.html',\n  styleUrls: ['./contest-timer.component.css']\n})\nexport class ContestTimerComponent implements OnInit {\n  timeLeft:number = 15;\n  seconds;\n  constructor() { }\n\n  ngOnInit(): void {\n    this.startTimer();\n  }\n\n  startTimer() {\n    this.seconds = setInterval(() => {\n      if(this.timeLeft > 0) {\n        this.timeLeft--;\n      } else {\n        console.log(\"done\");\n      }\n    }, 1000)\n  }\n\n\n}\n","\n\n<h2 [ngClass]=\"{'timer1': timeLeft > 3, 'timer2': timeLeft <= 3} \">{{timeLeft}}</h2>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef } from \"@angular/material/dialog\";\n\nimport {\n  MAT_DIALOG_DATA\n} from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-dialog-body',\n  templateUrl: './dialog-body.component.html',\n  styleUrls: ['./dialog-body.component.css']\n})\nexport class DialogBodyComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogBodyComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ){}\n\n  ngOnInit(): void {\n  }\n\n\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n","\n<mat-dialog-content class=\"dialog\">\n\n<h2 style=\"font-family: 'Montserrat', sans-serif;\"> {{(data.isCorrect && \"Correct\") || \"Incorrect\"}}</h2>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"end\">\n    <button type=\"button\" class = \"btn\" [ngClass]=\"{'btn-success': data.isCorrect, 'btn-danger': !data.isCorrect}\" (click)=\"close()\" style=\"font-family: 'Montserrat', sans-serif;\">{{( data.isCorrect && \"Sweet\" )||\"Fine\"}}</button>\n</mat-dialog-actions>\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  baseUri:string = 'http://localhost:4000/api';\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  userId:string ;\n\n  constructor(private http: HttpClient) {\n  };\n\n  setId(id) {\n    this.userId = id;\n  }\n\n  getId() {\n    return this.userId;\n  }\n\n  signInUser(data): Observable<any> {\n    let url = `${this.baseUri}/signup`;\n    return this.http.post(url, data)\n      .pipe(\n        catchError(this.errorMgmt)\n      )\n  }\n\n  getQuestion(id): Observable<any> {\n    let url = `${this.baseUri}/question/${id}`;\n    return this.http.get(url, {headers: this.headers}).pipe(\n      map((res: Response) => {\n        return res || {}\n      }),\n      catchError(this.errorMgmt)\n    )\n  }\n\n  submit(data): Observable<any> {\n    let url = `${this.baseUri}/submit`;\n    return this.http.post(url, data)\n      .pipe(\n        catchError(this.errorMgmt)\n      )\n  }\n\n  getUser(id) {\n    let url = `${this.baseUri}/user/${id}`;\n    return this.http.get(url, {headers: this.headers}).pipe(\n      map((res: Response) => {\n        return res || {}\n      }),\n      catchError(this.errorMgmt)\n    )\n  }\n\n  getPoints(id) {\n    let url = `${this.baseUri}/points/${id}`;\n    return this.http.get(url, {headers: this.headers}).pipe(\n      map((res: Response) => {\n        return res || {}\n      }),\n      catchError(this.errorMgmt)\n    )\n  }\n\n\n  errorMgmt(error: HttpErrorResponse) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}